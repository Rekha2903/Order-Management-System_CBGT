package com.project.ordermanagement.controller;

import java.util.ArrayList;
import java.util.Locale;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.cloud.openfeign.EnableFeignClients;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.project.ordermanagement.ErrorCodes;
import com.project.ordermanagement.exception.OrderItemNotCreatedException;
import com.project.ordermanagement.model.Order;
import com.project.ordermanagement.model.OrderItem;
import com.project.ordermanagement.model.OrderItemResponse;
import com.project.ordermanagement.service.OrderItemClient;
import com.project.ordermanagement.service.OrderService;

@RestController
@EnableFeignClients
@RequestMapping("/")
public class OrderServiceController {
	
	@Autowired
	private OrderService orderService;
	
	@Autowired
	private OrderItemClient itemFeignClient;
	
	public ResponseEntity<ArrayList<OrderItemResponse>> getOrderItems(){
		return itemFeignClient.getOrderItems();
	}

	@GetMapping("/items")
	public ResponseEntity<ArrayList<Order>> getOrders(){
		ArrayList<Order> orders = (ArrayList<Order>) orderService.retrieveOrders();
		return new ResponseEntity<ArrayList<Order>>(orders, HttpStatus.OK);
		
	}
	
	@PostMapping("/item")
	public ResponseEntity<OrderItem> addOrderItem(@RequestBody OrderItem item,Locale locale) {
		OrderItem itemCreated = itemService.createOrderItem(item);
		if (itemCreated == null) 
			throw new OrderItemNotCreatedException(message.getMessage(ErrorCodes.ORDERITEMNOTSAVED, null, locale));
		 else 
			return new ResponseEntity<OrderItem>(itemCreated, HttpStatus.CREATED);
	}
}

