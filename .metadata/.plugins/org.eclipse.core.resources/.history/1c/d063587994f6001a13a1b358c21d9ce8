package com.project.ordermanagement.controller;

import java.util.ArrayList;
import java.util.Locale;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.MessageSource;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.project.ordermanagement.ErrorCodes;
import com.project.ordermanagement.exception.OrderItemNotFoundException;
import com.project.ordermanagement.exception.OrderNotFoundException;
import com.project.ordermanagement.model.Order;
import com.project.ordermanagement.model.OrderItem;
import com.project.ordermanagement.service.OrderService;

@RestController
@RequestMapping("/orders")
public class OrderServiceController {
	
	@Autowired
	private OrderService orderService;
	@Autowired
	MessageSource message;
	
	@GetMapping
	public ResponseEntity<ArrayList<Order>> getOrders(){
		ArrayList<Order> orders = (ArrayList<Order>) orderService.retrieveOrders();
		return new ResponseEntity<ArrayList<Order>>(orders, HttpStatus.OK);
	}
	
	@GetMapping("/orderById/{orderId}")
	public ResponseEntity<Order> getOrderByOrderId(@PathVariable int orderId,Locale locale){
		Order order = orderService.retrieveOrderByOrderId(orderId);
		if(null!=order) {
			return new ResponseEntity<Order>(order, HttpStatus.OK);
		}else
			throw new OrderNotFoundException(message.getMessage(ErrorCodes.ORDERNOTFOUND, null, locale));
	}
	
	@GetMapping("/itemByName/{itemName}")
	public ResponseEntity<OrderItem> getOrderItemByProductName(@PathVariable String itemName,Locale locale){
		OrderItem item = itemService.retrieveOrderItemByProductName(itemName);
		if(null!=item) {
			return new ResponseEntity<OrderItem>(item, HttpStatus.OK);
		}else
			throw new OrderItemNotFoundException(message.getMessage(ErrorCodes.ORDERNOTFOUND, null, locale));
	}
	
	@GetMapping("/totalItemsAvailable")
	public ResponseEntity<?> getOrderItemCount(){
		return new ResponseEntity<>(itemService.itemCount(), HttpStatus.OK);
	}

}

